{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/contacts/EditContact.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","to","branding","icon","faHome","faPlus","faQuestion","defaultProps","Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","a","axios","get","res","this","data","value","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","delete","name","email","phone","faSortDown","onClick","style","cursor","faTimes","bind","float","color","faPencilAlt","marginRight","Contacts","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","About","NotFound","EditContact","match","params","updContact","put","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.d32c38f9.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faPlus, faQuestion } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function Header(props) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          {props.branding}\r\n        </Link>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <FontAwesomeIcon icon={faHome} /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <FontAwesomeIcon icon={faPlus} /> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <FontAwesomeIcon icon={faQuestion} /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nHeader.defaultProps = {\r\n  branding: 'My App',\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter((contact) => {\r\n          return contact.id !== action.payload;\r\n        }),\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) => {\r\n          return contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact;\r\n        }),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: (action) => {\r\n      this.setState((state) => reducer(state, action));\r\n    },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faPencilAlt,\r\n  faSortDown,\r\n  faTimes,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n\r\n  onShowClick = () => {\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    } catch (err) {\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { name, email, phone, id } = this.props.contact;\r\n          const { showContactInfo } = this.state;\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{' '}\r\n                <FontAwesomeIcon\r\n                  icon={faSortDown}\r\n                  onClick={this.onShowClick}\r\n                  style={{ cursor: 'pointer' }}\r\n                />\r\n                <FontAwesomeIcon\r\n                  icon={faTimes}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                />\r\n                <Link to={`/contact/edit/${id}`}>\r\n                  <FontAwesomeIcon\r\n                    icon={faPencilAlt}\r\n                    style={{\r\n                      cursor: 'pointer',\r\n                      float: 'right',\r\n                      color: 'black',\r\n                      marginRight: '1rem',\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nexport default class Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n          return (\r\n            <>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map((contact) => (\r\n                <Contact contact={contact} key={contact.id} />\r\n              ))}\r\n            </>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nexport default function TextInputGroup(props) {\r\n  const { label, name, value, placeholder, type, onChange, error } = props;\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error,\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error ? <div className=\"invalid-feedback\">{error}</div> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text',\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nexport default class AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {},\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === '') {\r\n      this.setState({\r\n        errors: {\r\n          name: 'Name is required.',\r\n        },\r\n      });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({\r\n        errors: {\r\n          email: 'Email is required.',\r\n        },\r\n      });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({\r\n        errors: {\r\n          phone: 'Phone is required.',\r\n        },\r\n      });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    const res = await axios.post(\r\n      'https://jsonplaceholder.typicode.com/users',\r\n      newContact\r\n    );\r\n\r\n    dispatch({\r\n      type: 'ADD_CONTACT',\r\n      payload: res.data,\r\n    });\r\n\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Enter Name...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    placeholder=\"Enter Phone...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-block btn-light\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nexport default class EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const { name, email, phone } = res.data;\r\n    this.setState({ name: name, email: email, phone: phone });\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === '') {\r\n      this.setState({\r\n        errors: {\r\n          name: 'Name is required.',\r\n        },\r\n      });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({\r\n        errors: {\r\n          email: 'Email is required.',\r\n        },\r\n      });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({\r\n        errors: {\r\n          phone: 'Phone is required.',\r\n        },\r\n      });\r\n      return;\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({\r\n      type: 'UPDATE_CONTACT',\r\n      payload: res.data,\r\n    });\r\n\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder=\"Enter Name...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    placeholder=\"Enter Phone...\"\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-block btn-light\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import Header from './components/layout/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Contacts from './components/contacts/Contacts';\nimport { Provider } from './context';\nimport AddContact from './components/contacts/AddContact';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport EditContact from './components/contacts/EditContact';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts}></Route>\n              <Route exact path=\"/contact/add\" component={AddContact}></Route>\n              <Route\n                exact\n                path=\"/contact/edit/:id\"\n                component={EditContact}\n              ></Route>\n              <Route exact path=\"/about\" component={About}></Route>\n              <Route component={NotFound}></Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}